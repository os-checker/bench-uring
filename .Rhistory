install.packages("DT")
library(ggplot2)
library(dplyr)
library(DT)
# 自动应用中文字体
showtext::showtext_auto()
# 设置默认主题
font_ratio = 1
theme_set(
theme_minimal() +
theme(
text = element_text(size = 16*font_ratio),  # 设置全局字体大小为 16
plot.title = element_text(size = 20*font_ratio, face = "bold"),
axis.title = element_text(size = 16*font_ratio),
axis.text = element_text(size = 14*font_ratio),
legend.title = element_text(size = 16*font_ratio),
legend.text = element_text(size = 14*font_ratio)
)
)
# Prepare
data <- read.csv("../data.csv")
data$server_st <- data$server_st == "true"
data$client_st <- data$client_st == "true"
filtered_data <- data %>%
filter(socket_len == 100)
# 去除 server 列中的 "server_" 前缀
filtered_data$server <- sub("^server_", "", filtered_data$server)
filtered_data$client <- sub("^client_", "", filtered_data$client)
# 修改标签格式
filtered_data$server <- sub("_st$", "\n(1 thread)", filtered_data$server)
filtered_data$server <- sub("_mt$", "\n(8 threads)", filtered_data$server)
filtered_data$client <- sub("_st$", " (1 thread)", filtered_data$client)
filtered_data$client <- sub("_mt$", " (8 threads)", filtered_data$client)
filtered_data <- filtered_data %>%
group_by(server, client) %>%
summarise(mbps = mean(mbps, na.rm = TRUE), .groups = 'drop')
# 按 mbps 降序排列
filtered_data <- filtered_data %>%
arrange(desc(mbps))
ggplot(filtered_data, aes(
x = reorder(server, -mbps),
y = mbps,
fill = client
)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "MBps by Server with 100 sockets in a Client",
x = "Server",
y = "MBps",
fill = "Client") +
geom_text(
aes(label = round(mbps, 0), color = client, fontface = "bold"),
position = position_dodge(width = 0.9),
vjust = -0.4,
size = 2.8,
show.legend = FALSE
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 0),
# 如果标签过长，可以旋转标签
legend.direction = "horizontal",
legend.position = "inside",
# 将图例放入绘图区
legend.position.inside = c(0.7, 0.88),
legend.background = element_rect(fill = "white", color = NA),
) +
scale_y_continuous(expand = c(0.08, 0))  # 扩展 y 轴范围，为标签提供更多空间
datatable(data)
library(ggplot2)
library(dplyr)
library(DT)
# 自动应用中文字体
showtext::showtext_auto()
# 设置默认主题
font_ratio = 1
theme_set(
theme_minimal() +
theme(
text = element_text(size = 16*font_ratio),  # 设置全局字体大小为 16
plot.title = element_text(size = 20*font_ratio, face = "bold"),
axis.title = element_text(size = 16*font_ratio),
axis.text = element_text(size = 14*font_ratio),
legend.title = element_text(size = 16*font_ratio),
legend.text = element_text(size = 14*font_ratio)
)
)
# Prepare
data <- read.csv("2025-05-17.csv")
data$server_st <- data$server_st == "true"
library(ggplot2)
library(dplyr)
library(DT)
# 自动应用中文字体
showtext::showtext_auto()
# 设置默认主题
font_ratio = 1
theme_set(
theme_minimal() +
theme(
text = element_text(size = 16*font_ratio),  # 设置全局字体大小为 16
plot.title = element_text(size = 20*font_ratio, face = "bold"),
axis.title = element_text(size = 16*font_ratio),
axis.text = element_text(size = 14*font_ratio),
legend.title = element_text(size = 16*font_ratio),
legend.text = element_text(size = 14*font_ratio)
)
)
# Prepare
data <- read.csv("2025-05-17.csv")
data$server_st <- data$server_st == "true"
data$client_st <- data$client_st == "true"
filtered_data <- data %>%
filter(socket_len == 100)
# 去除 server 列中的 "server_" 前缀
filtered_data$server <- sub("^server_", "", filtered_data$server)
filtered_data$client <- sub("^client_", "", filtered_data$client)
# 修改标签格式
filtered_data$server <- sub("_st$", "\n(1 thread)", filtered_data$server)
filtered_data$server <- sub("_mt$", "\n(8 threads)", filtered_data$server)
filtered_data$client <- sub("_st$", " (1 thread)", filtered_data$client)
filtered_data$client <- sub("_mt$", " (8 threads)", filtered_data$client)
filtered_data <- filtered_data %>%
group_by(server, client) %>%
summarise(mbps = mean(mbps, na.rm = TRUE), .groups = 'drop')
# 按 mbps 降序排列
filtered_data <- filtered_data %>%
arrange(desc(mbps))
ggplot(filtered_data, aes(
x = reorder(server, -mbps),
y = mbps,
fill = client
)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "MBps by Server with 100 sockets in a Client",
x = "Server",
y = "MBps",
fill = "Client") +
geom_text(
aes(label = round(mbps, 0), color = client, fontface = "bold"),
position = position_dodge(width = 0.9),
vjust = -0.4,
size = 2.8,
show.legend = FALSE
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 0),
# 如果标签过长，可以旋转标签
legend.direction = "horizontal",
legend.position = "inside",
# 将图例放入绘图区
legend.position.inside = c(0.7, 0.88),
legend.background = element_rect(fill = "white", color = NA),
) +
scale_y_continuous(expand = c(0.08, 0))  # 扩展 y 轴范围，为标签提供更多空间
datatable(data)
gc()
library(ggplot2)
library(dplyr)
library(DT)
# 自动应用中文字体
showtext::showtext_auto()
# 设置默认主题
font_ratio = 1
theme_set(
theme_minimal() +
theme(
text = element_text(size = 16*font_ratio),  # 设置全局字体大小为 16
plot.title = element_text(size = 20*font_ratio, face = "bold"),
axis.title = element_text(size = 16*font_ratio),
axis.text = element_text(size = 14*font_ratio),
legend.title = element_text(size = 16*font_ratio),
legend.text = element_text(size = 14*font_ratio)
)
)
# Prepare
data <- read.csv("2025-05-17.csv")
data$server_st <- data$server_st == "true"
data$client_st <- data$client_st == "true"
filtered_data <- data %>%
filter(socket_len == 100)
# 去除 server 列中的 "server_" 前缀
filtered_data$server <- sub("^server_", "", filtered_data$server)
filtered_data$client <- sub("^client_", "", filtered_data$client)
# 修改标签格式
filtered_data$server <- sub("_st$", "\n(1 thread)", filtered_data$server)
filtered_data$server <- sub("_mt$", "\n(8 threads)", filtered_data$server)
filtered_data$client <- sub("_st$", " (1 thread)", filtered_data$client)
filtered_data$client <- sub("_mt$", " (8 threads)", filtered_data$client)
filtered_data <- filtered_data %>%
group_by(server, client) %>%
summarise(mbps = mean(mbps, na.rm = TRUE), .groups = 'drop')
# 按 mbps 降序排列
filtered_data <- filtered_data %>%
arrange(desc(mbps))
ggplot(filtered_data, aes(
x = reorder(server, -mbps),
y = mbps,
fill = client
)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "MBps by Server with 100 sockets in a Client",
x = "Server",
y = "MBps",
fill = "Client") +
geom_text(
aes(label = round(mbps, 0), color = client, fontface = "bold"),
position = position_dodge(width = 0.9),
vjust = -0.4,
size = 2.8,
show.legend = FALSE
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 0),
# 如果标签过长，可以旋转标签
legend.direction = "horizontal",
legend.position = "inside",
# 将图例放入绘图区
legend.position.inside = c(0.7, 0.88),
legend.background = element_rect(fill = "white", color = NA),
) +
scale_y_continuous(expand = c(0.08, 0))  # 扩展 y 轴范围，为标签提供更多空间
datatable(data)
# Prepare
data <- read.csv("2025-05-24.csv")
data$server_st <- data$server_st == "true"
data$client_st <- data$client_st == "true"
filtered_data <- data %>%
filter(socket_len == 100)
# 去除 server 列中的 "server_" 前缀
filtered_data$server <- sub("^server_", "", filtered_data$server)
filtered_data$client <- sub("^client_", "", filtered_data$client)
# 修改标签格式
filtered_data$server <- sub("_st$", "\n(1 thread)", filtered_data$server)
filtered_data$server <- sub("_mt$", "\n(8 threads)", filtered_data$server)
filtered_data$client <- sub("_st$", " (1 thread)", filtered_data$client)
filtered_data$client <- sub("_mt$", " (8 threads)", filtered_data$client)
filtered_data <- filtered_data %>%
group_by(server, client) %>%
summarise(mbps = mean(mbps, na.rm = TRUE), .groups = 'drop')
# 按 mbps 降序排列
filtered_data <- filtered_data %>%
arrange(desc(mbps))
ggplot(filtered_data, aes(
x = reorder(server, -mbps),
y = mbps,
fill = client
)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "MBps by Server with 100 sockets in a Client",
x = "Server",
y = "MBps",
fill = "Client") +
geom_text(
aes(label = round(mbps, 0), color = client, fontface = "bold"),
position = position_dodge(width = 0.9),
vjust = -0.4,
size = 2.8,
show.legend = FALSE
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 0),
# 如果标签过长，可以旋转标签
legend.direction = "horizontal",
legend.position = "inside",
# 将图例放入绘图区
legend.position.inside = c(0.7, 0.88),
legend.background = element_rect(fill = "white", color = NA),
) +
scale_y_continuous(expand = c(0.08, 0))  # 扩展 y 轴范围，为标签提供更多空间
datatable(data)
View(filtered_data)
View(filtered_data)
View(data)
filtered_data <- data %>%
filter(socket_len == 100, duration == 4)
# 去除 server 列中的 "server_" 前缀
filtered_data$server <- sub("^server_", "", filtered_data$server)
filtered_data$client <- sub("^client_", "", filtered_data$client)
# 修改标签格式
filtered_data$server <- sub("_st$", "\n(1 thread)", filtered_data$server)
filtered_data$server <- sub("_mt$", "\n(8 threads)", filtered_data$server)
filtered_data$client <- sub("_st$", " (1 thread)", filtered_data$client)
filtered_data$client <- sub("_mt$", " (8 threads)", filtered_data$client)
filtered_data <- filtered_data %>%
group_by(server, client) %>%
summarise(mbps = mean(mbps, na.rm = TRUE), .groups = 'drop')
# 按 mbps 降序排列
filtered_data <- filtered_data %>%
arrange(desc(mbps))
ggplot(filtered_data, aes(
x = reorder(server, -mbps),
y = mbps,
fill = client
)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "MBps by Server with 100 sockets in a Client",
x = "Server",
y = "MBps",
fill = "Client") +
geom_text(
aes(label = round(mbps, 0), color = client, fontface = "bold"),
position = position_dodge(width = 0.9),
vjust = -0.4,
size = 2.8,
show.legend = FALSE
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 0),
# 如果标签过长，可以旋转标签
legend.direction = "horizontal",
legend.position = "inside",
# 将图例放入绘图区
legend.position.inside = c(0.7, 0.88),
legend.background = element_rect(fill = "white", color = NA),
) +
scale_y_continuous(expand = c(0.08, 0))  # 扩展 y 轴范围，为标签提供更多空间
datatable(data)
source("./rscripts/setup.R")
source("./rscripts/setup.R")
# Prepare
data <- read.csv("2025-05-24.csv")
data$server_st <- data$server_st == "true"
data$client_st <- data$client_st == "true"
filtered_data <- data %>%
filter(socket_len == 100, duration == 30)
source("./rscripts/plot_filtered_data.R")
datatable(filtered_data)
source("./rscripts/setup.R")
# Prepare
data <- read.csv("2025-05-24.csv")
data$server_st <- data$server_st == "true"
data$client_st <- data$client_st == "true"
filtered_data <- data %>%
filter(socket_len == 100, duration == 30)
source("./rscripts/process_filtered_data.R")
ggplot(filtered_data, aes(
x = reorder(server, -mbps),
y = mbps,
fill = client
)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "MBps by Server with 100 sockets in a Client",
x = "Server",
y = "MBps",
fill = "Client") +
geom_text(
aes(label = round(mbps, 0), color = client, fontface = "bold"),
position = position_dodge(width = 0.9),
vjust = -0.4,
size = 2.8,
show.legend = FALSE
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 0),
# 如果标签过长，可以旋转标签
legend.direction = "horizontal",
legend.position = "inside",
# 将图例放入绘图区
legend.position.inside = c(0.7, 0.88),
legend.background = element_rect(fill = "white", color = NA),
) +
scale_y_continuous(expand = c(0.08, 0))  # 扩展 y 轴范围，为标签提供更多空间
datatable(filtered_data)
source("./rscripts/setup.R")
# Prepare
data <- read.csv("2025-05-24.csv")
data$server_st <- data$server_st == "true"
data$client_st <- data$client_st == "true"
filtered_data <- data %>%
filter(socket_len == 100, duration == 30)
source("./rscripts/plot_filtered_data.R", print.eval = TRUE)
datatable(filtered_data)
